apiVersion: kustomize.toolkit.fluxcd.io/v1
kind: Kustomization
metadata:
  name: infisical-secret-propagation
  namespace: platform-flux-system
spec:
  interval: 5m
  prune: true
  sourceRef:
    kind: GitRepository
    name: flux-system
    namespace: flux-system
  path: ./infrastructure/infisical/propagation
  postBuild:
    substituteFrom:
      - kind: Secret
        name: cluster-endpoints
        optional: true
---
# This HelmRelease deploys a reflector controller that syncs secrets across clusters
apiVersion: helm.toolkit.fluxcd.io/v2beta2
kind: HelmRelease
metadata:
  name: secret-reflector
  namespace: platform-flux-system
spec:
  interval: 30m
  chart:
    spec:
      chart: reflector
      version: "7.1.262"
      sourceRef:
        kind: HelmRepository
        name: emberstack
        namespace: flux-system
  values:
    configuration:
      logging:
        minimumLevel: Information
    nodeSelector:
      cluster-type: platform
---
apiVersion: source.toolkit.fluxcd.io/v1beta2
kind: HelmRepository
metadata:
  name: emberstack
  namespace: flux-system
spec:
  interval: 1h
  url: https://emberstack.github.io/helm-charts
---
# Custom controller to push secrets to remote clusters
apiVersion: apps/v1
kind: Deployment
metadata:
  name: cross-cluster-secret-sync
  namespace: platform-flux-system
spec:
  replicas: 1
  selector:
    matchLabels:
      app: cross-cluster-secret-sync
  template:
    metadata:
      labels:
        app: cross-cluster-secret-sync
    spec:
      serviceAccountName: cross-cluster-secret-sync
      nodeSelector:
        cluster-type: platform
      containers:
      - name: syncer
        image: bitnami/kubectl:latest
        command: ["/bin/bash"]
        args:
          - -c
          - |
            while true; do
              echo "Checking for secrets to sync..."
              
              # Get all secrets labeled for cross-cluster sync
              for secret in $(kubectl get secrets -n infisical -l infisical.io/sync-to-cluster -o name); do
                SECRET_NAME=$(echo $secret | cut -d'/' -f2)
                TARGET_CLUSTER=$(kubectl get $secret -n infisical -o jsonpath='{.metadata.labels.infisical\.io/sync-to-cluster}')
                TARGET_NAMESPACE=$(kubectl get $secret -n infisical -o jsonpath='{.metadata.labels.infisical\.io/target-namespace}')
                
                echo "Syncing secret $SECRET_NAME to cluster $TARGET_CLUSTER namespace $TARGET_NAMESPACE"
                
                # Get target cluster kubeconfig
                if kubectl get secret "${TARGET_CLUSTER}-cluster-kubeconfig" -n platform-flux-system &> /dev/null; then
                  # Extract kubeconfig
                  kubectl get secret "${TARGET_CLUSTER}-cluster-kubeconfig" -n platform-flux-system -o jsonpath='{.data.kubeconfig}' | base64 -d > /tmp/target-kubeconfig
                  
                  # Get secret data
                  SECRET_DATA=$(kubectl get secret $SECRET_NAME -n infisical -o yaml | yq eval 'del(.metadata.resourceVersion, .metadata.uid, .metadata.creationTimestamp, .metadata.labels, .metadata.annotations)' -)
                  
                  # Apply to target cluster
                  echo "$SECRET_DATA" | kubectl --kubeconfig=/tmp/target-kubeconfig apply -n "$TARGET_NAMESPACE" -f -
                  
                  rm -f /tmp/target-kubeconfig
                fi
              done
              
              echo "Sync cycle complete. Sleeping for 60 seconds..."
              sleep 60
            done
        resources:
          requests:
            cpu: 100m
            memory: 128Mi
          limits:
            cpu: 500m
            memory: 512Mi
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: cross-cluster-secret-sync
  namespace: platform-flux-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: cross-cluster-secret-sync
rules:
- apiGroups: [""]
  resources: ["secrets"]
  verbs: ["get", "list", "watch"]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: cross-cluster-secret-sync
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: cross-cluster-secret-sync
subjects:
- kind: ServiceAccount
  name: cross-cluster-secret-sync
  namespace: platform-flux-system