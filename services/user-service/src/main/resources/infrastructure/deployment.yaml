apiVersion: apps/v1
kind: Deployment
metadata:
  name: user-service
  namespace: user-service
spec:
  replicas: 3
  selector:
    matchLabels:
      app: user-service
  template:
    metadata:
      labels:
        app: user-service
        version: v1
    spec:
      # Schedule on general-public nodes
      nodeSelector:
        node-type: general-public
      
      # Anti-affinity to spread pods across nodes
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - weight: 100
            podAffinityTerm:
              labelSelector:
                matchExpressions:
                - key: app
                  operator: In
                  values:
                  - user-service
              topologyKey: kubernetes.io/hostname
      
      serviceAccountName: user-service
      
      containers:
      - name: user-service
        image: jcr.example.com/base-application/user-service:latest # {"$imagepolicy": "flux-system:user-service"}
        imagePullPolicy: Always
        ports:
        - containerPort: 8080
          name: http
          protocol: TCP
        - containerPort: 9090
          name: metrics
          protocol: TCP
        
        env:
        - name: JAVA_OPTS
          value: "-Xms512m -Xmx2g"
        - name: VERTX_CONFIG_PATH
          value: "/config/config.properties"
        - name: DATABASE_URL
          valueFrom:
            secretKeyRef:
              name: user-service-db
              key: url
        - name: DATABASE_USERNAME
          valueFrom:
            secretKeyRef:
              name: user-service-db
              key: username
        - name: DATABASE_PASSWORD
          valueFrom:
            secretKeyRef:
              name: user-service-db
              key: password
        
        resources:
          requests:
            cpu: "250m"
            memory: "512Mi"
          limits:
            cpu: "1000m"
            memory: "2Gi"
        
        livenessProbe:
          httpGet:
            path: /health/live
            port: 8080
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 3
        
        readinessProbe:
          httpGet:
            path: /health/ready
            port: 8080
          initialDelaySeconds: 10
          periodSeconds: 5
          timeoutSeconds: 3
          failureThreshold: 3
        
        volumeMounts:
        - name: config
          mountPath: /config
          readOnly: true
      
      volumes:
      - name: config
        configMap:
          name: user-service-config
      
      imagePullSecrets:
      - name: jcr-registry-secret
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: user-service
  namespace: user-service